* General looks
** Hide menu bar, tooltips, tool bar, and scroll bar
#+BEGIN_SRC emacs-lisp
(menu-bar-mode -1)
(tooltip-mode -1)
(tool-bar-mode -1)
(scroll-bar-mode -1)
#+END_SRC
** Line numbers (but not in terminals)
#+BEGIN_SRC emacs-lisp
(global-display-line-numbers-mode 1)
(add-hook 'term-mode-hook
          (lambda () (display-line-numbers-mode -1)))
#+END_SRC
** Prettify symbols
#+BEGIN_SRC emacs-lisp
(global-prettify-symbols-mode 1)
#+END_SRC
* General functionality
** Server
*** Initialize
#+BEGIN_SRC emacs-lisp
(server-start)
#+END_SRC
** Annoyances
*** Don't make extra files on the filesystem
#+BEGIN_SRC emacs-lisp
(setq make-backup-file nil)
(setq auto-save-default nil)
#+END_SRC
*** Make scrolling a little less crazy
#+BEGIN_SRC emacs-lisp
(setq scroll-conservatively 100)
#+END_SRC
*** Replace "yes or no" prompts with "y or n"
#+BEGIN_SRC emacs-lisp
(defalias 'yes-or-no-p 'y-or-n-p)
#+END_SRC
*** If on a system with a bell, shut it up
#+BEGIN_SRC emacs-lisp
(setq ring-bell-function 'ignore)
#+END_SRC
** Convenience
*** Enable ido-mode
#+BEGIN_SRC emacs-lisp
(setq ido-mode-flex-matching nil)
(setq ido-create-new-buffer 'always)
(setq ido-everywhere t)
(ido-mode 1)
#+END_SRC
*** Enable ibuffer
#+BEGIN_SRC emacs-lisp
(global-set-key (kbd "C-x C-b") 'ibuffer)
#+END_SRC
** Terminal
*** Always use my shell
#+BEGIN_SRC emacs-lisp
(defvar my-term-shell "/bin/zsh")
(defadvice ansi-term (before force-bash)
  (interactive (list my-term-shell)))
(ad-activate 'ansi-term)
#+END_SRC
*** Bind Super+Return to terminal
#+BEGIN_SRC emacs-lisp
(global-set-key (kbd "<s-return>") 'ansi-term)
#+END_SRC
* Packages
** which-key (small menus for commands)
#+BEGIN_SRC emacs-lisp
(use-package which-key
  :ensure t
  :init (which-key-mode 1))
#+END_SRC
** ido-vertical-mode (make ido-mode less ugly)
#+BEGIN_SRC emacs-lisp
(use-package ido-vertical-mode
  :ensure t
  :init (ido-vertical-mode 1))
(setq ido-vertical-define-keys 'C-n-and-C-p-only)
#+END_SRC
** smex (M-x but ido style)
#+BEGIN_SRC emacs-lisp
(use-package smex
  :ensure t
  :bind ("M-x" . smex))
#+END_SRC
